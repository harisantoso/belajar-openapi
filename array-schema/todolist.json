{
  "openapi": "3.0.3",
  
  "info": {
    "title": "Todolist RESTful API",
    "vesion": "1",
    "description": "OpenAPI for Todolist RESTful API",
    "termsOfService": "https://www.hrsantoso.com",
    "contact": {
      "name": "Hari Santoso",
      "email": "harysanttos@gmail.com",
      "url": "https://www.hrsantoso.com"
    },
    "license":{
    "name": "APACHE 2.0",
    "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },

  "servers": [
    {
      "description":"Todolist Restful API",
      "url": "https://{environment}.hrsantoso.com/api/v1",
      "variables": {
        "environment": {
          "description":"Server Environment",
          "default": "dev",
          "enum": [
            "dev",
            "qa",
            "prod"
          ]
        }
      }
    }
  ],

  "externalDocs": {
    "description": "Youtube Virtual Box",
    "url": "https://www.youtube.com/c/VirtualBox" 
  },
  
  "paths":{
    "/todolist": {

      
      "get": {
        "summary": "Get All Todolist",
        "description": "Get all active todolist by default",
        "parameters": [
          {
            "name": "include done",
            "in": "query",
            "required": false,
            "description": "Is include done todolist",

            "schema": {
              "type": "boolean",
              "nullable": true,
              "default": false
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filter todolist by name",

            "schema": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "responses": {
          
        }
      },


      "post": {
        "summary": "Create New Todolist",
        "description": "Create New active database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "default": 1
                  },
                  "tags": {
                    "type": "array",
                    "required": false,
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
        }
      }
    },
    "/todolist/{todolistId": {


      "put": {
        "summary": "Updata existing todolist",
        "description": "Update existing todolist in database",
        "parameters": [
          {
            "name": "todolistId",
            "in": "path",
            "required": true,
            "description": "todolist id for updated",

            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  },
                  "priority": {
                    "type": "integer",
                    "format": "int32",
                    "default": 1,
                    "required": true
                  },
                  "tags": {
                    "type": "array",
                    "required": false,
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
        }
      },
      

      "delete": {
        "summary": "Delete existing todolistt",
        "description": "Delete existing todolist in database",
        "parameters": [
          {
            "name": "todolistId",
            "in": "path",
            "required": true,
            "description": "todolist id for deleted",
            "schema": {
              "type": "boolean",
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "responses": {
        }
      }
    }
  }
}
